//Solution to https://www.hackerrank.com/challenges/longest-increasing-subsequent/problem


using System;
using System.Collections.Generic;
using System.IO;
class Solution {
    static void Main(String[] args) {
        int n = Convert.ToInt32(Console.ReadLine());
        int[] nums = new int[n];
        for(int i = 0; i < n; i++){
            nums[i] = Convert.ToInt32(Console.ReadLine());
        }
        int result = 0;
        result = LIS(nums);
        Console.WriteLine(result);
    }
    
    public static int LIS(int[] nums){
        int[] temp = new int[nums.Length];
        int max = 0;
        for(int i = 0; i < nums.Length; i++){
            if(nums[i] > temp[max]){
                max++;
                temp[max] = nums[i];
            }
            else{
                int index = BinarySearch(temp, nums[i], 0, max);
                temp[index] = nums[i];
            }
        }
        return max;
    }
    
    public static int BinarySearch(int[] nums, int num, int start, int end){
        int mid = (start + end) / 2;
        if(nums[mid] < num){
            if(nums[mid + 1] >= num)
                return mid + 1;
            return BinarySearch(nums, num, mid, end);
            
        }
        return BinarySearch(nums, num, start, mid);
    }
}
