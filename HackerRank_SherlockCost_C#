//Solution to https://www.hackerrank.com/challenges/sherlock-and-cost/problem

using System;
using System.Collections.Generic;
using System.IO;
class Solution {
    static void Main(String[] args) {
        int T = Convert.ToInt32(Console.ReadLine());
        for(int i = 0; i < T; i++){
            int n = Convert.ToInt32(Console.ReadLine());
            int[] input = new int[n];
            input = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
        
            int result = GetBest(n, input);
            Console.WriteLine(result);
        }
    }
    
    public static int GetBest(int n, int[] input){
        int[,] dp = new int[n, 2];
        for(int i = 0; i < n; i++)
        {
            if(i == 0)
            {
                dp[i, 0] = dp[i, 1] = 0;
            }
            else
            {
                int t1 = Math.Abs(input[i - 1] - 1);
                int t2 = Math.Abs(input[i] - 1);
                int t3 = Math.Abs(input[i] - input[i - 1]);
                dp[i, 0] = Max(t1 + dp[i - 1, 1], dp[i - 1, 0]);
                dp[i, 1] = Max(t2 + dp[i - 1, 0], t3 + dp[i - 1, 1]);
            }
        }
        return Max(dp[n - 1, 0], dp[n - 1, 1]);
    }
    
    public static int Max(int a, int b){
        return a > b ? a : b;
    }
}
